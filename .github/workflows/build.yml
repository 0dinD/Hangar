name: Deploy

on:
  # allow manual dispatch
  workflow_dispatch:
  push:
    branches:
      - nuxt-frontend
    #- master TODO: once nuxt is merged, change this back

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Set up Docker
        run: |
          echo $DOCKER_CA_PEM >> $GITHUB_WORKSPACE/ca.pem.base64
          echo $DOCKER_CERT >> $GITHUB_WORKSPACE/cert.pem.base64
          echo $DOCKER_KEY >> $GITHUB_WORKSPACE/key.pem.base64
          base64 -d $GITHUB_WORKSPACE/ca.pem.base64 >> $GITHUB_WORKSPACE/ca.pem
          base64 -d $GITHUB_WORKSPACE/cert.pem.base64 >> $GITHUB_WORKSPACE/cert.pem
          base64 -d $GITHUB_WORKSPACE/key.pem.base64 >> $GITHUB_WORKSPACE/key.pem
          alias secure-docker="docker -H tcp://bender.minidigger.me:4243 --tlsverify --tlscacert=$GITHUB_WORKSPACE/ca.pem --tlscert=$GITHUB_WORKSPACE/cert.pem --tlskey=$GITHUB_WORKSPACE/key.pem"

      - name: Docker
        run: |
          cd docker/deployment
          docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
          docker-compose build
          docker-compose push
          secure-docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
          secure-docker stack deploy --with-registry-auth --compose-file=docker-compose.yml ${SERVICE_NAME}
